#!/bin/sh
# PROVIDE: digitalocean
# REQUIRE: var
# BEFORE:  netif hostname
# KEYWORD: nojail
#
# Add the following to /etc/rc.conf to enable:
#
# digitalocean_enable="YES"
#
# shellcheck disable=SC2034  # Variables used by rc.subr framework
. /etc/rc.subr

name="digitalocean"
start_cmd="${name}_start"
stop_cmd=":"  # One-shot service; no stop action needed.

digitalocean_conf="/usr/local/etc/${name}.conf"
digitalocean_script="/usr/local/sbin/${name}.sh"

required_files="${digitalocean_conf}"

digitalocean_start()
{
	# 1. Ensure the configuration file is present and readable.
	if [ ! -r "${digitalocean_conf}" ]; then
		warn "Cannot read configuration file: ${digitalocean_conf}"
		return 1
	fi

	# shellcheck source=/dev/null
	. "${digitalocean_conf}"

	# 2. Verify that required variables were set by the config file.
	: "${pub_if?Error: 'pub_if' is not set in ${digitalocean_conf}}"
	: "${api_net_cidr?Error: 'api_net_cidr' is not set in ${digitalocean_conf}}"

	# 3. Verify the main script exists and is executable.
	if [ ! -x "${digitalocean_script}" ]; then
		warn "Script does not exist or is not executable: ${digitalocean_script}"
		return 1
	fi

	added_ip=0

	# 4. Check if the public interface already has an IPv4 address.
	if ! /sbin/ifconfig "${pub_if}" | /usr/bin/grep -q 'inet '; then
		check_startmsgs && echo "Temporarily configuring ${pub_if} with ${api_net_cidr} to fetch DigitalOcean metadata."

		# 5. Add temporary IP to reach the metadata API.
		if ! /sbin/ifconfig "${pub_if}" inet "${api_net_cidr}"; then
			warn "Failed to configure temporary IP ${api_net_cidr} on ${pub_if}."
			return 1
		fi
		added_ip=1
	fi

	check_startmsgs && echo "Starting DigitalOcean auto-configuration."

	# 6. Execute the main configuration script (continue boot even if it fails).
	if ! /bin/sh "${digitalocean_script}"; then
		warn "DigitalOcean configuration script failed (continuing boot)."
	fi

	# 7. Clean up temporary IP if we added it.
	if [ "${added_ip}" -eq 1 ]; then
		check_startmsgs && echo "Removing temporary IP ${api_net_cidr} from ${pub_if}."
		if ! /sbin/ifconfig "${pub_if}" inet "${api_net_cidr}" delete; then
			warn "Failed to remove temporary IP from ${pub_if} (non-fatal)."
		fi
	fi

	return 0
}

load_rc_config "${name}"
run_rc_command "$1"
